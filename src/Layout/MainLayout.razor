@inherits LayoutComponentBase

<MudThemeProvider Theme="@_mudTheme" @ref="@_mudThemeProvider" @bind-IsDarkMode="@isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudSwitch ThumbIcon="@Icons.Material.Filled.DarkMode" @bind-Value=@(isDarkMode) Color="Color.Primary" Style="padding-right:1%" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Tertiary" Edge="Edge.End" Href="https://github.com/csmir" />
        <MudIconButton Icon="@Icons.Custom.Brands.LinkedIn" Color="Color.Tertiary" Edge="Edge.End" Href="https://linkedin.com/in/armano-den-boef" />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.End" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="isDrawerOpen" Elevation="2" Anchor="Anchor.Right">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">csmir.me</MudText>
        </MudDrawerHeader>
        <Navigator/>
    </MudDrawer>
    <MudMainContent Style="min-height: 100vh;">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool isDrawerOpen = false;
    private bool isDarkMode = true;

    private MudThemeProvider? _mudThemeProvider;
    private MudTheme _mudTheme = new SpiderTheme();

    #region Rendering
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isDarkMode = await _mudThemeProvider!.GetSystemPreference();
            StateHasChanged();
        }
    }

    private void DrawerToggle()
    {
        isDrawerOpen = !isDrawerOpen;
    }
    #endregion
}